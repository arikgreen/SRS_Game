<?xml version="1.0"?>
<doc>
    <assembly>
        <name>OrdNumbers</name>
    </assembly>
    <members>
        <member name="T:MyLib.OrdNumbers.OrdNum">
            <class refID="ORDNUM_001"/>
            <summary>
              Klasa reprezentująca liczbę porządkową składającą się z segmentów.
              Segmenty są liczbami całkowitymi z zakresu od 0 do 255 oddzielonymi kropkami.
              Każdy segment może mieć wariant oznaczany literą od a do z.
            </summary>
        </member>
        <member name="F:MyLib.OrdNumbers.OrdNum.fValue">
            <summary>Wewnętrzna tablica segmentów</summary>
        </member>
        <member name="M:MyLib.OrdNumbers.OrdNum.#ctor">
            <summary>Konstruktor domyślny</summary>
        </member>
        <member name="M:MyLib.OrdNumbers.OrdNum.#ctor(MyLib.OrdNumbers.OrdNum)">
            <summary>Konstruktor kopiujący</summary>
        </member>
        <member name="M:MyLib.OrdNumbers.OrdNum.#ctor(System.Int32)">
            <summary>Konstruktor z wartością całkowitą (0..255)</summary>
        </member>
        <member name="M:MyLib.OrdNumbers.OrdNum.#ctor(System.Double)">
            <summary>Konstruktor z wartością rzeczywistą (0..255).(0..255)</summary>
        </member>
        <member name="M:MyLib.OrdNumbers.OrdNum.#ctor(System.Decimal)">
            <summary>Konstruktor z wartością dziesiętną (0..255).(0..255)</summary>
        </member>
        <member name="M:MyLib.OrdNumbers.OrdNum.#ctor(System.String)">
            <summary>Konstruktor z wartością tekstową</summary>
        </member>
        <member name="M:MyLib.OrdNumbers.OrdNum.HasIntValue">
            <summary>Czy ma wartość całkowitą?</summary>
        </member>
        <member name="M:MyLib.OrdNumbers.OrdNum.SetAsInt(System.Int32)">
            <summary>Wpisuje wartość całkowitą do liczby porządkowej</summary>
        </member>
        <member name="M:MyLib.OrdNumbers.OrdNum.GetAsInt">
            <summary>Podaje wartość całkowitą liczby porządkowej</summary>
        </member>
        <member name="M:MyLib.OrdNumbers.OrdNum.HasRealValue">
            <summary>Czy ma wartość rzeczywistą?</summary>
        </member>
        <member name="M:MyLib.OrdNumbers.OrdNum.SetAsReal(System.Double)">
            <summary>Wpisuje wartość rzeczywistą do liczby porządkowej</summary>
        </member>
        <member name="M:MyLib.OrdNumbers.OrdNum.GetAsReal">
            <summary>Podaje wartość rzeczywistą liczby porządkowej</summary>
        </member>
        <member name="M:MyLib.OrdNumbers.OrdNum.HasDecimalValue">
            <summary>Czy ma wartość dziesiętną?</summary>
        </member>
        <member name="M:MyLib.OrdNumbers.OrdNum.FromDecimal(System.Decimal)">
            <summary>Wpisuje wartość dziesiętną do liczby porządkowej</summary>
        </member>
        <member name="M:MyLib.OrdNumbers.OrdNum.ToDecimal">
            <summary>Podaje wartość dziesiętną liczby porządkowej</summary>
        </member>
        <member name="M:MyLib.OrdNumbers.OrdNum.IsValid(System.String)">
            <summary>Czy tekst jest poprawnie sformatowaną liczbą porządkową?</summary>
        </member>
        <member name="M:MyLib.OrdNumbers.OrdNum.SetAsString(System.String)">
            <summary>Wpisuje wartość tekstową do liczby porządkowej</summary>
        </member>
        <member name="M:MyLib.OrdNumbers.OrdNum.ToString">
            <summary>Podaje wartość tekstową liczby porządkowej</summary>
        </member>
        <member name="M:MyLib.OrdNumbers.OrdNum.op_Implicit(MyLib.OrdNumbers.OrdNum)~System.Int32">
            <summary>Niejawna konwersja na liczbę całkowitą</summary>
        </member>
        <member name="M:MyLib.OrdNumbers.OrdNum.op_Implicit(MyLib.OrdNumbers.OrdNum)~System.Double">
            <summary>Niejawna konwersja na liczbę rzeczywistą</summary>
        </member>
        <member name="M:MyLib.OrdNumbers.OrdNum.op_Implicit(MyLib.OrdNumbers.OrdNum)~System.Decimal">
            <summary>Niejawna konwersja na liczbę dziesiętną</summary>
        </member>
        <member name="M:MyLib.OrdNumbers.OrdNum.op_Implicit(MyLib.OrdNumbers.OrdNum)~System.String">
            <summary>Niejawna konwersja na tekst</summary>
        </member>
        <member name="M:MyLib.OrdNumbers.OrdNum.op_Implicit(System.Int32)~MyLib.OrdNumbers.OrdNum">
            <summary>Niejawna konwersja z liczby całkowitej</summary>
        </member>
        <member name="M:MyLib.OrdNumbers.OrdNum.op_Implicit(System.Double)~MyLib.OrdNumbers.OrdNum">
            <summary>Niejawna konwersja z liczby rzeczywistej</summary>
        </member>
        <member name="M:MyLib.OrdNumbers.OrdNum.op_Implicit(System.Decimal)~MyLib.OrdNumbers.OrdNum">
            <summary>Niejawna konwersja z liczby dziesiętnej</summary>
        </member>
        <member name="M:MyLib.OrdNumbers.OrdNum.op_Implicit(System.String)~MyLib.OrdNumbers.OrdNum">
            <summary>Niejawna konwersja z tekstu</summary>
        </member>
        <member name="M:MyLib.OrdNumbers.OrdNum.op_Equality(MyLib.OrdNumbers.OrdNum,MyLib.OrdNumbers.OrdNum)">
            <summary>Porównanie dwóch liczb porządkowych</summary>
        </member>
        <member name="M:MyLib.OrdNumbers.OrdNum.op_Inequality(MyLib.OrdNumbers.OrdNum,MyLib.OrdNumbers.OrdNum)">
            <summary>Operator nierówności dwóch liczb porządkowych</summary>
        </member>
        <member name="M:MyLib.OrdNumbers.OrdNum.op_GreaterThan(MyLib.OrdNumbers.OrdNum,MyLib.OrdNumbers.OrdNum)">
            <summary>Operator większości dwóch liczb porządkowych</summary>
        </member>
        <member name="M:MyLib.OrdNumbers.OrdNum.op_GreaterThanOrEqual(MyLib.OrdNumbers.OrdNum,MyLib.OrdNumbers.OrdNum)">
            <summary>Operator większości lub równości dwóch liczb porządkowych</summary>
        </member>
        <member name="M:MyLib.OrdNumbers.OrdNum.op_LessThan(MyLib.OrdNumbers.OrdNum,MyLib.OrdNumbers.OrdNum)">
            <summary>Operator większości dwóch liczb porządkowych</summary>
        </member>
        <member name="M:MyLib.OrdNumbers.OrdNum.op_LessThanOrEqual(MyLib.OrdNumbers.OrdNum,MyLib.OrdNumbers.OrdNum)">
            <summary>Operator większości lub równości dwóch liczb porządkowych</summary>
        </member>
        <member name="M:MyLib.OrdNumbers.OrdNum.op_Equality(MyLib.OrdNumbers.OrdNum,System.Int32)">
            <summary>Porównanie z liczbą całkowitą</summary>
        </member>
        <member name="M:MyLib.OrdNumbers.OrdNum.op_Inequality(MyLib.OrdNumbers.OrdNum,System.Int32)">
            <summary>Operator nierówności liczby porządkowej z liczbą całkowitą</summary>
        </member>
        <member name="M:MyLib.OrdNumbers.OrdNum.op_Equality(MyLib.OrdNumbers.OrdNum,System.Double)">
            <summary>Porównanie z liczbą rzeczywistą</summary>
        </member>
        <member name="M:MyLib.OrdNumbers.OrdNum.op_Inequality(MyLib.OrdNumbers.OrdNum,System.Double)">
            <summary>Operator nierówności liczby porządkowej z liczbą rzeczywistą</summary>
        </member>
        <member name="M:MyLib.OrdNumbers.OrdNum.op_Equality(MyLib.OrdNumbers.OrdNum,System.Decimal)">
            <summary>Porównanie z liczbą dziesiętną</summary>
        </member>
        <member name="M:MyLib.OrdNumbers.OrdNum.op_Inequality(MyLib.OrdNumbers.OrdNum,System.Decimal)">
            <summary>Operator nierówności liczby porządkowej z liczbą dziesiętną</summary>
        </member>
        <member name="M:MyLib.OrdNumbers.OrdNum.op_Equality(MyLib.OrdNumbers.OrdNum,System.String)">
            <summary>Porównanie z wartością tekstową</summary>
        </member>
        <member name="M:MyLib.OrdNumbers.OrdNum.op_Inequality(MyLib.OrdNumbers.OrdNum,System.String)">
            <summary>Operator nierówności liczby porządkowej z wartością tekstową</summary>
        </member>
        <member name="M:MyLib.OrdNumbers.OrdNum.Compare(System.String,System.String)">
            <summary>
            Porównanie dwóch łańcuchów traktowanych jako liczby porządkowe.
            </summary>
            <remarks>
            Łańcuch pusty jest mniejszy od jakiegokolwiek innego, z wyjątkiem innego pustego.
            </remarks>
            <returns>-1 gdy pierwszy jest mniejszy od drugiego, 0 gdy równy, +1 gdy większy</returns>
        </member>
        <member name="M:MyLib.OrdNumbers.OrdNum.Compare(MyLib.OrdNumbers.OrdNum,MyLib.OrdNumbers.OrdNum,System.Boolean)">
            <summary>
            Porównanie dwóch liczb porządkowych.
            </summary>
            <returns>-1 gdy pierwsza jest mniejsza od drugiej, 0 gdy równa, +1 gdy większa</returns>
        </member>
        <member name="M:MyLib.OrdNumbers.OrdNum.CompareTo(System.Object)">
            <summary>Porównanie wartości porządkowej z innym obiektem</summary>
            <param name="o">wartość porównywana</param>
            <returns>-1 gdy dana wartość jest mniejsza od tej drugiej, 0 gdy równa, +1 gdy większa</returns>
        </member>
        <member name="M:MyLib.OrdNumbers.OrdNum.CompareTo(MyLib.OrdNumbers.OrdNum)">
            <summary>Porównanie wartości porządkowej z inną wartością porządkową</summary>
            <param name="o">wartość porównywana</param>
            <returns>-1 gdy dana wartość jest mniejsza od tej drugiej, 0 gdy równa, +1 gdy większa</returns>
        </member>
        <member name="M:MyLib.OrdNumbers.OrdNum.Equals(System.Object)">
            <summary>Porównanie wartości porządkowej z dowolną inną wartością</summary>
            <param name="o">wartość porównywana (obiekt)</param>
        </member>
        <member name="M:MyLib.OrdNumbers.OrdNum.IsNullOrEmpty(MyLib.OrdNumbers.OrdNum)">
            <summary>
            Sprawdzenie, czy wartość porządkowa jest pusta.
            </summary>
        </member>
        <member name="M:MyLib.OrdNumbers.OrdNum.op_BitwiseOr(MyLib.OrdNumbers.OrdNum,System.Int32)">
            <summary>Dopisanie liczby całkowitej do liczby porządkowej. Dodawany jest nowy segment</summary>
        </member>
        <member name="M:MyLib.OrdNumbers.OrdNum.op_BitwiseOr(MyLib.OrdNumbers.OrdNum,System.String)">
            <summary>Dopisanie wartości tekstowej do liczby porządkowej. Dodawany jest nowy segment</summary>
        </member>
        <member name="M:MyLib.OrdNumbers.OrdNum.op_BitwiseAnd(MyLib.OrdNumbers.OrdNum,System.Int32)">
            <summary>Ustawia wariant na ostatnim segmencie liczby porządkowej</summary>
            <param name="a">wejściowa liczba porządkowa</param>
            <param name="n">wartość wariantu 1='a', 2='b' itd.</param>
        </member>
        <member name="M:MyLib.OrdNumbers.OrdNum.op_BitwiseAnd(MyLib.OrdNumbers.OrdNum,System.String)">
            <summary>Ustawia wariant na ostatnim segmencie liczby porządkowej</summary>
            <param name="a">wejściowa liczba porządkowa</param>
            <param name="s">wartość tekstowa wariantu "a"=1, "b"=2 itd.</param>
        </member>
        <member name="M:MyLib.OrdNumbers.OrdNum.op_Increment(MyLib.OrdNumbers.OrdNum)">
            <summary>
              Zwiększa wartość ostatniego segmentu o 1.
            </summary>
        </member>
        <member name="M:MyLib.OrdNumbers.OrdNum.op_Addition(MyLib.OrdNumbers.OrdNum,System.Int32)">
            <summary>
              Zwiększa wartość ostatniego segmentu o n.
            </summary>
        </member>
        <member name="M:MyLib.OrdNumbers.OrdNum.op_Decrement(MyLib.OrdNumbers.OrdNum)">
            <summary>
              Zmniejsza wartość ostatniego segmentu o 1.
            </summary>
        </member>
        <member name="M:MyLib.OrdNumbers.OrdNum.op_Subtraction(MyLib.OrdNumbers.OrdNum,System.Int32)">
            <summary>
              Zmniejsza wartość ostatniego segmentu o n.
            </summary>
        </member>
        <member name="M:MyLib.OrdNumbers.OrdNum.op_Multiply(MyLib.OrdNumbers.OrdNum,System.Int32)">
            <summary>
              Zwiększa wariant ostatniego segmentu o n.
            </summary>
        </member>
        <member name="M:MyLib.OrdNumbers.OrdNum.op_Division(MyLib.OrdNumbers.OrdNum,System.Int32)">
            <summary>
              Zmniejsza wariant ostatniego segmentu o n.
            </summary>
        </member>
        <member name="M:MyLib.OrdNumbers.OrdNum.GetHashCode">
            <summary>Funkcja mieszania</summary>
        </member>
        <member name="P:MyLib.OrdNumbers.OrdNum.AsInt">
            <summary>Wartość całkowita liczby porządkowej</summary>
        </member>
        <member name="P:MyLib.OrdNumbers.OrdNum.AsReal">
            <summary>Wartość rzeczywista liczby porządkowej</summary>
        </member>
        <member name="P:MyLib.OrdNumbers.OrdNum.DecimalValue">
            <summary>Wartość dziesiętna liczby porządkowej</summary>
        </member>
        <member name="P:MyLib.OrdNumbers.OrdNum.StrValue">
            <summary>Wartość tekstowa liczby porządkowej</summary>
        </member>
        <member name="P:MyLib.OrdNumbers.OrdNum.Count">
            <summary>Liczba segmentów</summary>
        </member>
        <member name="P:MyLib.OrdNumbers.OrdNum.Length">
            <summary>Długość liczona w wartościach i wariantach</summary>
        </member>
        <member name="P:MyLib.OrdNumbers.OrdNum.Item(System.Int32)">
            <summary>Dostęp do pojedynczego segmentu</summary>
        </member>
        <member name="T:MyLib.OrdNumbers.OrdNumSegment">
            <class refID="ORDNUM_002"/>
            <summary>
              Pojedynczy segment liczby porządkowej
            </summary>
        </member>
        <member name="F:MyLib.OrdNumbers.OrdNumSegment.fValue">
            <summary>
            Wartość całkowita segmentu
            </summary>
        </member>
        <member name="F:MyLib.OrdNumbers.OrdNumSegment.fVariant">
            <summary>
            Wartość literowa wariantu segmentu.
            Dla zaoszczędzenia miejsca pamiętana w formie znaku ASCII
            </summary>
        </member>
        <member name="M:MyLib.OrdNumbers.OrdNumSegment.#ctor(MyLib.OrdNumbers.OrdNumSegment)">
            <summary>Konstruktor kopiujący</summary>
        </member>
        <member name="M:MyLib.OrdNumbers.OrdNumSegment.#ctor(System.Int32)">
            <summary>Konstruktor z wartością całkowitą</summary>
        </member>
        <member name="M:MyLib.OrdNumbers.OrdNumSegment.#ctor(System.String)">
            <summary>Konstruktor z wartością tekstową</summary>
        </member>
        <member name="M:MyLib.OrdNumbers.OrdNumSegment.#ctor(System.Int32,System.Int32)">
            <summary>Konstruktor z wartością całkowitą i wariantem w postaci liczby całkowitej</summary>
        </member>
        <member name="M:MyLib.OrdNumbers.OrdNumSegment.#ctor(System.Int32,System.String)">
            <summary>Konstruktor z wartością całkowitą i wariantem w postaci tekstu: "a"=1.</summary>
        </member>
        <member name="M:MyLib.OrdNumbers.OrdNumSegment.VariantToStr(System.Int32)">
            <summary>
              Konwersja wariantu na łańcuch. 0 = <c>null</c>, 1 = "A", 26 = "Z", 27 = "a", 58 = "z", else = "?"
            </summary>
        </member>
        <member name="M:MyLib.OrdNumbers.OrdNumSegment.StrToVariant(System.String)">
            <summary>
              Konwersja łańcucha na wariant. <c>null</c> = 0, "A" = 1, "Z" = 26, "a" = 27, "z" = 58
            </summary>
        </member>
        <member name="P:MyLib.OrdNumbers.OrdNumSegment.Value">
            <summary>Wartość całkowita segmentu</summary>
        </member>
        <member name="P:MyLib.OrdNumbers.OrdNumSegment.Variant">
            <summary>Wartość całkowita wariantu (0 - gdy brak)</summary>
        </member>
        <member name="P:MyLib.OrdNumbers.OrdNumSegment.VariantStr">
            <summary>Wartość tekstowa wariantu (<c>null</c> - gdy brak)</summary>
        </member>
        <member name="T:MyLib.OrdNumbers.OrdNumTypeConverter">
            <summary>
            Konwerter dla potrzeb serializacji
            </summary>
        </member>
        <member name="M:MyLib.OrdNumbers.OrdNumTypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Konwerter może zamienić łańcuch na liczbę porządkową
            </summary>
        </member>
        <member name="M:MyLib.OrdNumbers.OrdNumTypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Konwersja łańcucha na liczbę porządkową
            </summary>
        </member>
    </members>
</doc>
