using System;
using System.Linq;
using Microsoft.EntityFrameworkCore;
using Microsoft.Extensions.DependencyInjection;
using SRS_Game.Models;
using System.Diagnostics;
using Microsoft.IdentityModel.Tokens;
using SRS_Game.Data;
using Microsoft.VisualStudio.Web.CodeGenerators.Mvc.Templates.Blazor;
using SRS_Game.Models.Srs;
using System.Text;

namespace ContosoUniversity.Data
{
    public static class DbInitializer
    {
        public static void Initialize(SRS_GameDbContext context)
        {
            context.Database.EnsureCreated();

            //return;   // DB has been seeded
            
            // Look for any records.
            if (context.Teams.Any())
            {
                context.Teams.ExecuteDelete();
                context.Database.ExecuteSqlRaw("DBCC CHECKIDENT ('Teams', RESEED, 0)");
                context.SaveChanges();
            }

            if (context.Participants.Any())
            {
                context.Participants.ExecuteDelete();
                context.Database.ExecuteSqlRaw("DBCC CHECKIDENT ('Participants', RESEED, 0)");
                context.SaveChanges();
            }

            if (context.TeamParticipants.Any())
            {
                context.TeamParticipants.ExecuteDelete();
                context.SaveChanges();
            }

            if (context.Projects.Any())
            {
                context.Projects.ExecuteDelete();
                context.Database.ExecuteSqlRaw("DBCC CHECKIDENT ('Projects', RESEED, 0)");
                context.SaveChanges();
            }

            if (context.Documents.Any())
            {
                context.Documents.ExecuteDelete();
                context.Database.ExecuteSqlRaw("DBCC CHECKIDENT ('Documents', RESEED, 0)");
                context.SaveChanges();
            }

            if (context.DocumentHistories.Any())
            {
                context.DocumentHistories.ExecuteDelete();
                context.Database.ExecuteSqlRaw("DBCC CHECKIDENT ('DocumentHistories', RESEED, 0)");
                context.SaveChanges();
            }

            if (context.Attachements.Any())
            {
                context.Attachements.ExecuteDelete();
                context.Database.ExecuteSqlRaw("DBCC CHECKIDENT ('Attachements', RESEED, 0)");
                context.SaveChanges();
            }

            if (context.UserRoles.Any())
            {
                context.UserRoles.ExecuteDelete();
                context.Database.ExecuteSqlRaw("DBCC CHECKIDENT ('UserRoles', RESEED, 0)");
                context.SaveChanges();
            }

            if (context.Users.Any())
            {
                context.Users.ExecuteDelete();
                context.Database.ExecuteSqlRaw("DBCC CHECKIDENT ('Users', RESEED, 0)");
                context.SaveChanges();
            }

            if (context.ProjectSepcyfications.Any())
            {
                context.ProjectSepcyfications.ExecuteDelete();
                //context.Database.ExecuteSqlRaw("DBCC CHECKIDENT ('ProjectSepcyfications', RESEED, 0)");
                context.SaveChanges();
            }

            var userRoles = new UserRole[]
            {
                new ("Administrator", "Administrator"),
                new ("Owner", "Teacher"),
                new ("User", "Student")
            };
            
            context.UserRoles.AddRange(userRoles);
            context.SaveChanges();

            var users = new User[]
            {
                new ("s94089", "", "s94089@student.pg.edu.pl", 3, "Artur", "Wilczak", "", new DateTime(2023, 1, 15), new DateTime(2023, 5, 15)),
                new ("qhta", "", "qhta@pg.edu.pl", 2, "Jarosław", "Kuchta", "", new DateTime(2024, 1, 15), new DateTime(2024, 5, 15))
            };

            context.Users.AddRange(users);
            context.SaveChanges();

            var teams = new Team[]
            {
                new ("Zespół A", "001", new DateTime(2023, 1, 15), new DateTime(2023, 5, 15)),
                new ("Zespół B", "002", new DateTime(2023, 2, 20), new DateTime(2023, 6, 20)),
                new ("Zespół C", "003", new DateTime(2023, 3, 25), new DateTime(2023, 7, 25)),
                new ("Zespół D", "004", new DateTime(2023, 4, 10), new DateTime(2023, 8, 10))
            };
            context.Teams.AddRange(teams);
            context.SaveChanges();

            var projects = new Project[] {
                new ("Projekt A", "PROJ001", new DateTime(2023, 1, 15), new DateTime(2023, 5, 15), 1),
                new ("Projekt B", "PROJ002", new DateTime(2023, 2, 20), new DateTime(2023, 6, 20), 2),
                new ("Projekt C", "PROJ003", new DateTime(2023, 3, 25), new DateTime(2023, 7, 25), 8),
                new ("Projekt D", "PROJ004", new DateTime(2023, 4, 10), new DateTime(2023, 8, 10), 4),
                new ("Projekt E", "PROJ005", new DateTime(2023, 5, 5), new DateTime(2023, 9, 5), 5),
                new ("Projekt F", "PROJ006", new DateTime(2023, 6, 15), new DateTime(2023, 10, 15), 6),
                new ("Projekt G", "PROJ007", new DateTime(2023, 7, 25), new DateTime(2023, 11, 25), 4),
                new ("Projekt H", "PROJ008", new DateTime(2023, 8, 30), new DateTime(2023, 12, 30), 8),
                new ("Projekt I", "PROJ009", new DateTime(2023, 9, 20), new DateTime(2024, 1, 20), 6),
                new ("Projekt J", "PROJ010", new DateTime(2023, 10, 15), new DateTime(2024, 2, 15), 6)
            };
            context.Projects.AddRange(projects);
            context.SaveChanges();

            var participants = new Participant[]
            {
                new ("Artur", "Wilczak", "s94089@student.pg.edu.pl", null, "123 456 789", null, false, new DateTime(2023, 6, 15), new DateTime(2023, 10, 15)),
                new ("Jan", "Kowalski", "jan.kowalski@example.com", null, null, null, false, new DateTime(2023, 6, 15), new DateTime(2023, 10, 15)),
                new ("Anna", "Nowak", "anna.nowak@example.com", "Firma1", null, null, true, new DateTime(2023, 3, 25), new DateTime(2023, 7, 25)),
                new ("Piotr", "Wiśniewski", "piotr.wisniewski@example.com", null, null, null, false, new DateTime(2023, 6, 15), new DateTime(2023, 10, 15)),
                new ("Katarzyna", "Wójcik", "katarzyna.wojcik@external.com", "Xternal", "147 258 369", "Łużycka 3c\nGdynia 81-573\nPoland", true, new DateTime(2023, 6, 15), new DateTime(2023, 10, 15)),
                new ("Tomasz", "Kowalczyk", "tomasz.kowalczyk@example.com", null, null, null, false, new DateTime(2023, 6, 15), new DateTime(2023, 10, 15)),
                new ("Agnieszka", "Zielińska", "agnieszka.zielinska@example.com", "Firm2", null, null ,true, new DateTime(2023, 3, 25), new DateTime(2023, 7, 25)),
                new ("Marek", "Szymański", "marek.szymanski@example.com", null, null, null, false, new DateTime(2023, 6, 15), new DateTime(2023, 10, 15)),
                new ("Magdalena", "Lewandowska", "magdalena.lewandowska@example.com", null, null, null, false, new DateTime(2023, 6, 15), new DateTime(2023, 10, 15)),
                new ("Paweł", "Kamiński", "pawel.kaminski@example.com", null, null, null, false, new DateTime(2023, 6, 15), new DateTime(2023, 10, 15))
            };
            context.Participants.AddRange(participants);
            context.SaveChanges();

            var teamParticipants = new TeamParticipants[]
            {
                new (1, 1),
                new (2, 2),
                new (2, 3),
                new (4, 4),
                new (4, 5),
                new (4, 6),
                new (1, 7),
                new (3, 8),
                new (1, 9),
                new (2, 10),
                new (3, 2)
            };
            context.TeamParticipants.AddRange(teamParticipants);
            context.SaveChanges();

            // Document(string name, string? destination, int authorId, int? teamId, int? teamLeaderId, int? projectId,
            // DateTime createDate, DateTime updateDate, int versionId, int? parentId, string? fileName, int? rate)
            var documents = new Document[]
            {
            new(
                "Project Specification",
                "Detailed specification for the project",
                1,
                1,
                10,
                1,
                DateTime.Now.AddMonths(-3),
                DateTime.Now.AddMonths(-1),
                1,
                null
            ),new(
                "Team Report",
                null,
                1,
                1,
                10,
                1,
                DateTime.Now.AddMonths(-4),
                DateTime.Now.AddMonths(-2),
                2,
                1,
                39
            ),new(
                "Financial Report",
                "Quarterly financial results",
                3,
                2,
                null,
                3,
                DateTime.Now.AddMonths(-6),
                DateTime.Now.AddMonths(-3),
                1,
                null
            ),new(
                "Marketing Plan",
                "Plan for the upcoming marketing campaigns",
                4,
                3,
                2,
                4,
                DateTime.Now.AddMonths(-1),
                DateTime.Now.AddDays(-15),
                1,
                null,
                83
            ),new(
                "Project Proposal",
                null,
                8,
                4,
                6,
                4,
                DateTime.Now.AddMonths(-8),
                DateTime.Now.AddMonths(-4),
                2,
                null,
                23
            ),new(
                "Architecture Design",
                "Architecture design for the new system",
                5,
                3,
                3,
                10,
                DateTime.Now.AddMonths(-5),
                DateTime.Now.AddMonths(-3),
                3,
                5
            ),new(
                "Sprint Review",
                "Sprint 2 review notes",
                2,
                7,
                null,
                6,
                DateTime.Now.AddDays(-30),
                DateTime.Now.AddDays(-20),
                1,
                null,
                57
            ),new(
                "Client Feedback",
                null,
                6,
                1,
                8,
                null,
                DateTime.Now.AddMonths(-9),
                DateTime.Now.AddMonths(-7),
                1,
                null,
                47
            ),new(
                "System Requirements",
                "Complete list of system requirements",
                3,
                null,
                null,
                7,
                DateTime.Now.AddMonths(-2),
                DateTime.Now.AddMonths(-1),
                4,
                null,
                49
            ),new(
                "UI Mockups",
                "Initial UI mockups for client review",
                7,
                2,
                5,
                8,
                DateTime.Now.AddMonths(-3),
                DateTime.Now.AddMonths(-2),
                1,
                null
            ),new(
                "Code Review",
                "Code review document for sprint 5",
                8,
                3,
                null,
                9,
                DateTime.Now.AddMonths(-7),
                DateTime.Now.AddMonths(-5),
                1,
                null
            ),new(
                "Budget Report",
                "Detailed project budget report",
                4,
                1,
                6,
                4,
                DateTime.Now.AddMonths(-6),
                DateTime.Now.AddMonths(-4),
                2,
                9
            ),new(
                "Team Goals",
                "Goals for the upcoming quarter",
                9,
                2,
                10,
                null,
                DateTime.Now.AddMonths(-1),
                DateTime.Now.AddDays(-10),
                1,
                null,
                79
            ),new(
                "Security Audit",
                "Audit results for Q2",
                5,
                4,
                null,
                1,
                DateTime.Now.AddMonths(-10),
                DateTime.Now.AddMonths(-8),
                1,
                null
            ),new(
                "Risk Assessment",
                null,
                6,
                1,
                8,
                7,
                DateTime.Now.AddMonths(-12),
                DateTime.Now.AddMonths(-10),
                1,
                null,
                100
            )
        };
            context.Documents.AddRange(documents);
            context.SaveChanges();

            // Attachement(int documentId, string fileName, DateTime createdDate, DateTime updatedDate, byte[] fileContent, string contentType, bool isTranscript = false)
            var attachements = new Attachement[]
            {
                new (1, "Teams_Meeting_Transcript_2024-09-05.txt", DateTime.Parse("2024-09-05"), DateTime.Parse("2024-09-05"), [ 0x0a, 0x2a, 0x2a, 0x4d, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x20, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x2a, 0x2a, 0x20, 0x20, 0x0a, 0x2a, 0x2a, 0x44, 0x61, 0x74, 0x65, 0x3a, 0x2a, 0x2a, 0x20, 0x53, 0x65, 0x70, 0x74, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x20, 0x39, 0x2c, 0x20, 0x32, 0x30, 0x32, 0x34, 0x20, 0x20, 0x0a, 0x2a, 0x2a, 0x54, 0x69, 0x6d, 0x65, 0x3a, 0x2a, 0x2a, 0x20, 0x31, 0x30, 0x3a, 0x30, 0x30, 0x20, 0x41, 0x4d, 0x20, 0x2d, 0x20, 0x31, 0x30, 0x3a, 0x34, 0x35, 0x20, 0x41, 0x4d, 0x20, 0x20, 0x0a, 0x2a, 0x2a, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x73, 0x3a, 0x2a, 0x2a, 0x0a, 0x2d, 0x20, 0x4a, 0x6f, 0x68, 0x6e, 0x20, 0x44, 0x6f, 0x65, 0x20, 0x28, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x29, 0x0a, 0x2d, 0x20, 0x53, 0x61, 0x72, 0x61, 0x68, 0x20, 0x53, 0x6d, 0x69, 0x74, 0x68, 0x20, 0x28, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x20, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x29, 0x0a, 0x2d, 0x20, 0x4d, 0x69, 0x63, 0x68, 0x61, 0x65, 0x6c, 0x20, 0x4c, 0x65, 0x65, 0x20, 0x28, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x29, 0x0a, 0x2d, 0x20, 0x45, 0x6d, 0x69, 0x6c, 0x79, 0x20, 0x43, 0x6c, 0x61, 0x72, 0x6b, 0x20, 0x28, 0x41, 0x72, 0x63, 0x68, 0x69, 0x74, 0x65, 0x63, 0x74, 0x29, 0x0a, 0x0a, 0x2a, 0x2a, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x3a, 0x2a, 0x2a, 0x20, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x6f, 0x66, 0x20, 0x44, 0x65, 0x73, 0x69, 0x67, 0x6e, 0x20, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x57, 0x65, 0x62, 0x20, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x0a, 0x0a, 0x2d, 0x2d, 0x2d, 0x0a, 0x0a, 0x2a, 0x2a, 0x5b, 0x31, 0x30, 0x3a, 0x30, 0x30, 0x20, 0x41, 0x4d, 0x5d, 0x20, 0x53, 0x61, 0x72, 0x61, 0x68, 0x20, 0x53, 0x6d, 0x69, 0x74, 0x68, 0x20, 0x28, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x20, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x29, 0x3a, 0x2a, 0x2a, 0x20, 0x20, 0x0a, 0x47, 0x6f, 0x6f, 0x64, 0x20, 0x6d, 0x6f, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x2c, 0x20, 0x65, 0x76, 0x65, 0x72, 0x79, 0x6f, 0x6e, 0x65, 0x2e, 0x20, 0x4c, 0x65, 0x74, 0x27, 0x73, 0x20, 0x67, 0x65, 0x74, 0x20, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x2e, 0x20, 0x54, 0x6f, 0x64, 0x61, 0x79, 0x2c, 0x20, 0x77, 0x65, 0x27, 0x72, 0x65, 0x20, 0x64, 0x69, 0x73, 0x63, 0x75, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x20, 0x74, 0x68, 0x65, 0x20, 0x64, 0x65, 0x73, 0x69, 0x67, 0x6e, 0x20, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x6f, 0x75, 0x72, 0x20, 0x6e, 0x65, 0x77, 0x20, 0x77, 0x65, 0x62, 0x20, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x20, 0x5b, 0x4a, 0x6f, 0x68, 0x6e, 0x5d, 0x2c, 0x20, 0x77, 0x6f, 0x75, 0x6c, 0x64, 0x20, 0x79, 0x6f, 0x75, 0x20, 0x6c, 0x69, 0x6b, 0x65, 0x20, 0x74, 0x6f, 0x20, 0x73, 0x74, 0x61, 0x72, 0x74, 0x20, 0x77, 0x69, 0x74, 0x68, 0x20, 0x79, 0x6f, 0x75, 0x72, 0x20, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x3f, 0x0a, 0x0a, 0x2d, 0x2d, 0x2d, 0x0a, 0x0a, 0x2a, 0x2a, 0x5b, 0x31, 0x30, 0x3a, 0x30, 0x32, 0x20, 0x41, 0x4d, 0x5d, 0x20, 0x4a, 0x6f, 0x68, 0x6e, 0x20, 0x44, 0x6f, 0x65, 0x20, 0x28, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x29, 0x3a, 0x2a, 0x2a, 0x20, 0x20, 0x0a, 0x54, 0x68, 0x61, 0x6e, 0x6b, 0x73, 0x2c, 0x20, 0x53, 0x61, 0x72, 0x61, 0x68, 0x2e, 0x20, 0x59, 0x65, 0x73, 0x2c, 0x20, 0x6f, 0x75, 0x72, 0x20, 0x67, 0x6f, 0x61, 0x6c, 0x20, 0x69, 0x73, 0x20, 0x74, 0x6f, 0x20, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x20, 0x61, 0x20, 0x77, 0x65, 0x62, 0x20, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x74, 0x68, 0x61, 0x74, 0xe2, 0x80, 0x99, 0x73, 0x20, 0x69, 0x6e, 0x74, 0x75, 0x69, 0x74, 0x69, 0x76, 0x65, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x65, 0x61, 0x73, 0x79, 0x20, 0x74, 0x6f, 0x20, 0x75, 0x73, 0x65, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x6f, 0x75, 0x72, 0x20, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x73, 0x2e, 0x20, 0x57, 0x65, 0x20, 0x6e, 0x65, 0x65, 0x64, 0x20, 0x69, 0x74, 0x20, 0x74, 0x6f, 0x20, 0x62, 0x65, 0x20, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x69, 0x76, 0x65, 0x20, 0x61, 0x63, 0x72, 0x6f, 0x73, 0x73, 0x20, 0x61, 0x6c, 0x6c, 0x20, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x66, 0x75, 0x6c, 0x6c, 0x79, 0x20, 0x61, 0x6c, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x20, 0x77, 0x69, 0x74, 0x68, 0x20, 0x6f, 0x75, 0x72, 0x20, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x20, 0x67, 0x75, 0x69, 0x64, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x73, 0x2e, 0x20, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x20, 0x69, 0x73, 0x20, 0x61, 0x6c, 0x73, 0x6f, 0x20, 0x61, 0x20, 0x74, 0x6f, 0x70, 0x20, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x2c, 0x20, 0x65, 0x73, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x6c, 0x79, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x6f, 0x75, 0x72, 0x20, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x73, 0x27, 0x20, 0x73, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x76, 0x65, 0x20, 0x69, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x0a, 0x0a, 0x2d, 0x2d, 0x2d, 0x0a, 0x0a, 0x2a, 0x2a, 0x5b, 0x31, 0x30, 0x3a, 0x30, 0x35, 0x20, 0x41, 0x4d, 0x5d, 0x20, 0x53, 0x61, 0x72, 0x61, 0x68, 0x20, 0x53, 0x6d, 0x69, 0x74, 0x68, 0x20, 0x28, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x20, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x29, 0x3a, 0x2a, 0x2a, 0x20, 0x20, 0x0a, 0x47, 0x6f, 0x74, 0x20, 0x69, 0x74, 0x2e, 0x20, 0x53, 0x6f, 0x20, 0x77, 0x65, 0x27, 0x72, 0x65, 0x20, 0x6c, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x20, 0x61, 0x74, 0x20, 0x75, 0x73, 0x65, 0x72, 0x2d, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2c, 0x20, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x69, 0x76, 0x65, 0x6e, 0x65, 0x73, 0x73, 0x2c, 0x20, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x2c, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x20, 0x61, 0x73, 0x20, 0x6b, 0x65, 0x79, 0x20, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x20, 0x5b, 0x45, 0x6d, 0x69, 0x6c, 0x79, 0x5d, 0x2c, 0x20, 0x63, 0x6f, 0x75, 0x6c, 0x64, 0x20, 0x79, 0x6f, 0x75, 0x20, 0x73, 0x68, 0x61, 0x72, 0x65, 0x20, 0x79, 0x6f, 0x75, 0x72, 0x20, 0x74, 0x68, 0x6f, 0x75, 0x67, 0x68, 0x74, 0x73, 0x20, 0x6f, 0x6e, 0x20, 0x68, 0x6f, 0x77, 0x20, 0x77, 0x65, 0x20, 0x63, 0x61, 0x6e, 0x20, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x20, 0x74, 0x68, 0x65, 0x20, 0x64, 0x65, 0x73, 0x69, 0x67, 0x6e, 0x20, 0x74, 0x6f, 0x20, 0x6d, 0x65, 0x65, 0x74, 0x20, 0x74, 0x68, 0x65, 0x73, 0x65, 0x20, 0x6e, 0x65, 0x65, 0x64, 0x73, 0x3f, 0x0a, 0x0a, 0x2d, 0x2d, 0x2d, 0x0a, 0x0a, 0x2a, 0x2a, 0x5b, 0x31, 0x30, 0x3a, 0x30, 0x37, 0x20, 0x41, 0x4d, 0x5d, 0x20, 0x45, 0x6d, 0x69, 0x6c, 0x79, 0x20, 0x43, 0x6c, 0x61, 0x72, 0x6b, 0x20, 0x28, 0x41, 0x72, 0x63, 0x68, 0x69, 0x74, 0x65, 0x63, 0x74, 0x29, 0x3a, 0x2a, 0x2a, 0x20, 0x20, 0x0a, 0x53, 0x75, 0x72, 0x65, 0x2e, 0x20, 0x54, 0x6f, 0x20, 0x61, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x20, 0x74, 0x68, 0x69, 0x73, 0x2c, 0x20, 0x77, 0x65, 0xe2, 0x80, 0x99, 0x6c, 0x6c, 0x20, 0x66, 0x6f, 0x63, 0x75, 0x73, 0x20, 0x6f, 0x6e, 0x20, 0x74, 0x68, 0x65, 0x20, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x69, 0x6e, 0x67, 0x3a, 0x0a, 0x31, 0x2e, 0x20, 0x2a, 0x2a, 0x53, 0x63, 0x61, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x2a, 0x2a, 0x20, 0xe2, 0x80, 0x93, 0x20, 0x54, 0x68, 0x65, 0x20, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x20, 0x6d, 0x75, 0x73, 0x74, 0x20, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x20, 0x67, 0x72, 0x6f, 0x77, 0x69, 0x6e, 0x67, 0x20, 0x75, 0x73, 0x65, 0x72, 0x20, 0x64, 0x65, 0x6d, 0x61, 0x6e, 0x64, 0x20, 0x6f, 0x76, 0x65, 0x72, 0x20, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x0a, 0x32, 0x2e, 0x20, 0x2a, 0x2a, 0x50, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x2a, 0x2a, 0x20, 0xe2, 0x80, 0x93, 0x20, 0x57, 0x65, 0x20, 0x6e, 0x65, 0x65, 0x64, 0x20, 0x74, 0x6f, 0x20, 0x6f, 0x70, 0x74, 0x69, 0x6d, 0x69, 0x7a, 0x65, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x66, 0x61, 0x73, 0x74, 0x20, 0x6c, 0x6f, 0x61, 0x64, 0x20, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x73, 0x6d, 0x6f, 0x6f, 0x74, 0x68, 0x20, 0x6e, 0x61, 0x76, 0x69, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2c, 0x20, 0x65, 0x73, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x6c, 0x79, 0x20, 0x6f, 0x6e, 0x20, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2e, 0x0a, 0x33, 0x2e, 0x20, 0x2a, 0x2a, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x2a, 0x2a, 0x20, 0xe2, 0x80, 0x93, 0x20, 0x57, 0x65, 0xe2, 0x80, 0x99, 0x6c, 0x6c, 0x20, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x20, 0x62, 0x65, 0x73, 0x74, 0x20, 0x70, 0x72, 0x61, 0x63, 0x74, 0x69, 0x63, 0x65, 0x73, 0x20, 0x74, 0x6f, 0x20, 0x70, 0x72, 0x6f, 0x74, 0x65, 0x63, 0x74, 0x20, 0x75, 0x73, 0x65, 0x72, 0x20, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x0a, 0x34, 0x2e, 0x20, 0x2a, 0x2a, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x2a, 0x2a, 0x20, 0xe2, 0x80, 0x93, 0x20, 0x45, 0x6e, 0x73, 0x75, 0x72, 0x69, 0x6e, 0x67, 0x20, 0x74, 0x68, 0x61, 0x74, 0x20, 0x74, 0x68, 0x65, 0x20, 0x73, 0x69, 0x74, 0x65, 0x20, 0x69, 0x73, 0x20, 0x57, 0x43, 0x41, 0x47, 0x20, 0x32, 0x2e, 0x31, 0x20, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x69, 0x61, 0x6e, 0x74, 0x20, 0x74, 0x6f, 0x20, 0x61, 0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x65, 0x20, 0x75, 0x73, 0x65, 0x72, 0x73, 0x20, 0x77, 0x69, 0x74, 0x68, 0x20, 0x64, 0x69, 0x73, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x0a, 0x0a, 0x49, 0xe2, 0x80, 0x99, 0x6c, 0x6c, 0x20, 0x61, 0x6c, 0x73, 0x6f, 0x20, 0x65, 0x6e, 0x73, 0x75, 0x72, 0x65, 0x20, 0x74, 0x68, 0x61, 0x74, 0x20, 0x77, 0x65, 0x20, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x65, 0x20, 0x73, 0x65, 0x61, 0x6d, 0x6c, 0x65, 0x73, 0x73, 0x6c, 0x79, 0x20, 0x77, 0x69, 0x74, 0x68, 0x20, 0x79, 0x6f, 0x75, 0x72, 0x20, 0x43, 0x52, 0x4d, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x20, 0x65, 0x78, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x20, 0x74, 0x6f, 0x6f, 0x6c, 0x73, 0x2e, 0x0a, 0x0a, 0x2d, 0x2d, 0x2d, 0x0a, 0x0a, 0x2a, 0x2a, 0x5b, 0x31, 0x30, 0x3a, 0x31, 0x32, 0x20, 0x41, 0x4d, 0x5d, 0x20, 0x4a, 0x6f, 0x68, 0x6e, 0x20, 0x44, 0x6f, 0x65, 0x20, 0x28, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x29, 0x3a, 0x2a, 0x2a, 0x20, 0x20, 0x0a, 0x54, 0x68, 0x61, 0x74, 0xe2, 0x80, 0x99, 0x73, 0x20, 0x67, 0x72, 0x65, 0x61, 0x74, 0x2c, 0x20, 0x45, 0x6d, 0x69, 0x6c, 0x79, 0x2e, 0x20, 0x59, 0x65, 0x73, 0x2c, 0x20, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x77, 0x69, 0x74, 0x68, 0x20, 0x6f, 0x75, 0x72, 0x20, 0x43, 0x52, 0x4d, 0x20, 0x69, 0x73, 0x20, 0x63, 0x72, 0x69, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x74, 0x68, 0x69, 0x73, 0x20, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x20, 0x57, 0x65, 0x20, 0x61, 0x6c, 0x73, 0x6f, 0x20, 0x77, 0x61, 0x6e, 0x74, 0x20, 0x74, 0x6f, 0x20, 0x65, 0x6e, 0x73, 0x75, 0x72, 0x65, 0x20, 0x74, 0x68, 0x61, 0x74, 0x20, 0x6f, 0x75, 0x72, 0x20, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x20, 0x74, 0x6f, 0x6f, 0x6c, 0x73, 0x20, 0x73, 0x79, 0x6e, 0x63, 0x20, 0x77, 0x65, 0x6c, 0x6c, 0x20, 0x77, 0x69, 0x74, 0x68, 0x20, 0x74, 0x68, 0x65, 0x20, 0x6e, 0x65, 0x77, 0x20, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x0a, 0x0a, 0x2d, 0x2d, 0x2d, 0x0a, 0x0a, 0x2a, 0x2a, 0x5b, 0x31, 0x30, 0x3a, 0x31, 0x34, 0x20, 0x41, 0x4d, 0x5d, 0x20, 0x53, 0x61, 0x72, 0x61, 0x68, 0x20, 0x53, 0x6d, 0x69, 0x74, 0x68, 0x20, 0x28, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x20, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x29, 0x3a, 0x2a, 0x2a, 0x20, 0x20, 0x0a, 0x50, 0x65, 0x72, 0x66, 0x65, 0x63, 0x74, 0x2e, 0x20, 0x5b, 0x4d, 0x69, 0x63, 0x68, 0x61, 0x65, 0x6c, 0x5d, 0x2c, 0x20, 0x66, 0x72, 0x6f, 0x6d, 0x20, 0x61, 0x20, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x70, 0x65, 0x72, 0x73, 0x70, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x2c, 0x20, 0x68, 0x6f, 0x77, 0x20, 0x64, 0x6f, 0x20, 0x79, 0x6f, 0x75, 0x20, 0x73, 0x65, 0x65, 0x20, 0x74, 0x68, 0x69, 0x73, 0x20, 0x63, 0x6f, 0x6d, 0x69, 0x6e, 0x67, 0x20, 0x74, 0x6f, 0x67, 0x65, 0x74, 0x68, 0x65, 0x72, 0x3f, 0x0a, 0x0a, 0x2d, 0x2d, 0x2d, 0x0a, 0x0a, 0x2a, 0x2a, 0x5b, 0x31, 0x30, 0x3a, 0x31, 0x35, 0x20, 0x41, 0x4d, 0x5d, 0x20, 0x4d, 0x69, 0x63, 0x68, 0x61, 0x65, 0x6c, 0x20, 0x4c, 0x65, 0x65, 0x20, 0x28, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x29, 0x3a, 0x2a, 0x2a, 0x20, 0x20, 0x0a, 0x49, 0x20, 0x73, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x20, 0x75, 0x73, 0x69, 0x6e, 0x67, 0x20, 0x52, 0x65, 0x61, 0x63, 0x74, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x74, 0x68, 0x65, 0x20, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x2c, 0x20, 0x61, 0x73, 0x20, 0x69, 0x74, 0xe2, 0x80, 0x99, 0x73, 0x20, 0x67, 0x72, 0x65, 0x61, 0x74, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x20, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x20, 0x75, 0x73, 0x65, 0x72, 0x20, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x69, 0x73, 0x20, 0x65, 0x61, 0x73, 0x79, 0x20, 0x74, 0x6f, 0x20, 0x6d, 0x61, 0x69, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x2e, 0x20, 0x46, 0x6f, 0x72, 0x20, 0x74, 0x68, 0x65, 0x20, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2c, 0x20, 0x4e, 0x6f, 0x64, 0x65, 0x2e, 0x6a, 0x73, 0x20, 0x77, 0x69, 0x74, 0x68, 0x20, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x20, 0x77, 0x6f, 0x75, 0x6c, 0x64, 0x20, 0x62, 0x65, 0x20, 0x61, 0x20, 0x67, 0x6f, 0x6f, 0x64, 0x20, 0x66, 0x69, 0x74, 0x20, 0x62, 0x65, 0x63, 0x61, 0x75, 0x73, 0x65, 0x20, 0x69, 0x74, 0xe2, 0x80, 0x99, 0x73, 0x20, 0x68, 0x69, 0x67, 0x68, 0x6c, 0x79, 0x20, 0x73, 0x63, 0x61, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x70, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x74, 0x2e, 0x20, 0x41, 0x73, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x74, 0x68, 0x65, 0x20, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x77, 0x65, 0x20, 0x63, 0x61, 0x6e, 0x20, 0x75, 0x73, 0x65, 0x20, 0x4d, 0x6f, 0x6e, 0x67, 0x6f, 0x44, 0x42, 0x20, 0x64, 0x75, 0x65, 0x20, 0x74, 0x6f, 0x20, 0x69, 0x74, 0x73, 0x20, 0x66, 0x6c, 0x65, 0x78, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x2c, 0x20, 0x65, 0x73, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x6c, 0x79, 0x20, 0x77, 0x68, 0x65, 0x6e, 0x20, 0x64, 0x65, 0x61, 0x6c, 0x69, 0x6e, 0x67, 0x20, 0x77, 0x69, 0x74, 0x68, 0x20, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x20, 0x64, 0x61, 0x74, 0x61, 0x20, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x73, 0x2e, 0x0a, 0x0a, 0x2d, 0x2d, 0x2d, 0x0a, 0x0a, 0x2a, 0x2a, 0x5b, 0x31, 0x30, 0x3a, 0x31, 0x38, 0x20, 0x41, 0x4d, 0x5d, 0x20, 0x4a, 0x6f, 0x68, 0x6e, 0x20, 0x44, 0x6f, 0x65, 0x20, 0x28, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x29, 0x3a, 0x2a, 0x2a, 0x20, 0x20, 0x0a, 0x49, 0x20, 0x6c, 0x69, 0x6b, 0x65, 0x20, 0x74, 0x68, 0x65, 0x20, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x61, 0x63, 0x68, 0x2c, 0x20, 0x4d, 0x69, 0x63, 0x68, 0x61, 0x65, 0x6c, 0x2e, 0x20, 0x57, 0x69, 0x6c, 0x6c, 0x20, 0x74, 0x68, 0x65, 0x20, 0x64, 0x65, 0x73, 0x69, 0x67, 0x6e, 0x20, 0x62, 0x65, 0x20, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2d, 0x66, 0x69, 0x72, 0x73, 0x74, 0x3f, 0x0a, 0x0a, 0x2d, 0x2d, 0x2d, 0x0a, 0x0a, 0x2a, 0x2a, 0x5b, 0x31, 0x30, 0x3a, 0x31, 0x39, 0x20, 0x41, 0x4d, 0x5d, 0x20, 0x4d, 0x69, 0x63, 0x68, 0x61, 0x65, 0x6c, 0x20, 0x4c, 0x65, 0x65, 0x20, 0x28, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x29, 0x3a, 0x2a, 0x2a, 0x20, 0x20, 0x0a, 0x59, 0x65, 0x73, 0x2c, 0x20, 0x77, 0x65, 0xe2, 0x80, 0x99, 0x6c, 0x6c, 0x20, 0x6d, 0x61, 0x6b, 0x65, 0x20, 0x73, 0x75, 0x72, 0x65, 0x20, 0x69, 0x74, 0xe2, 0x80, 0x99, 0x73, 0x20, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2d, 0x66, 0x69, 0x72, 0x73, 0x74, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x66, 0x75, 0x6c, 0x6c, 0x79, 0x20, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x69, 0x76, 0x65, 0x20, 0x75, 0x73, 0x69, 0x6e, 0x67, 0x20, 0x42, 0x6f, 0x6f, 0x74, 0x73, 0x74, 0x72, 0x61, 0x70, 0x20, 0x6f, 0x72, 0x20, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x2d, 0x55, 0x49, 0x20, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x2e, 0x20, 0x54, 0x68, 0x69, 0x73, 0x20, 0x77, 0x69, 0x6c, 0x6c, 0x20, 0x65, 0x6e, 0x73, 0x75, 0x72, 0x65, 0x20, 0x74, 0x68, 0x65, 0x20, 0x73, 0x69, 0x74, 0x65, 0x20, 0x6c, 0x6f, 0x6f, 0x6b, 0x73, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x20, 0x67, 0x72, 0x65, 0x61, 0x74, 0x20, 0x61, 0x63, 0x72, 0x6f, 0x73, 0x73, 0x20, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x0a, 0x0a, 0x2d, 0x2d, 0x2d, 0x0a, 0x0a, 0x2a, 0x2a, 0x5b, 0x31, 0x30, 0x3a, 0x32, 0x31, 0x20, 0x41, 0x4d, 0x5d, 0x20, 0x53, 0x61, 0x72, 0x61, 0x68, 0x20, 0x53, 0x6d, 0x69, 0x74, 0x68, 0x20, 0x28, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x20, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x29, 0x3a, 0x2a, 0x2a, 0x20, 0x20, 0x0a, 0x47, 0x72, 0x65, 0x61, 0x74, 0x2e, 0x20, 0x4c, 0x65, 0x74, 0xe2, 0x80, 0x99, 0x73, 0x20, 0x74, 0x61, 0x6c, 0x6b, 0x20, 0x61, 0x62, 0x6f, 0x75, 0x74, 0x20, 0x74, 0x68, 0x65, 0x20, 0x74, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x20, 0x5b, 0x4a, 0x6f, 0x68, 0x6e, 0x5d, 0x2c, 0x20, 0x64, 0x6f, 0x20, 0x79, 0x6f, 0x75, 0x20, 0x68, 0x61, 0x76, 0x65, 0x20, 0x61, 0x6e, 0x79, 0x20, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x20, 0x64, 0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x73, 0x20, 0x69, 0x6e, 0x20, 0x6d, 0x69, 0x6e, 0x64, 0x3f, 0x0a, 0x0a, 0x2d, 0x2d, 0x2d, 0x0a, 0x0a, 0x2a, 0x2a, 0x5b, 0x31, 0x30, 0x3a, 0x32, 0x32, 0x20, 0x41, 0x4d, 0x5d, 0x20, 0x4a, 0x6f, 0x68, 0x6e, 0x20, 0x44, 0x6f, 0x65, 0x20, 0x28, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x29, 0x3a, 0x2a, 0x2a, 0x20, 0x20, 0x0a, 0x57, 0x65, 0xe2, 0x80, 0x99, 0x64, 0x20, 0x6c, 0x69, 0x6b, 0x65, 0x20, 0x74, 0x6f, 0x20, 0x73, 0x65, 0x65, 0x20, 0x61, 0x20, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x20, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x74, 0x79, 0x70, 0x65, 0x20, 0x69, 0x6e, 0x20, 0x74, 0x68, 0x72, 0x65, 0x65, 0x20, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x73, 0x2c, 0x20, 0x77, 0x69, 0x74, 0x68, 0x20, 0x61, 0x20, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x20, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x20, 0x69, 0x6e, 0x20, 0x73, 0x69, 0x78, 0x20, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x73, 0x2e, 0x0a, 0x0a, 0x2d, 0x2d, 0x2d, 0x0a, 0x0a, 0x2a, 0x2a, 0x5b, 0x31, 0x30, 0x3a, 0x32, 0x33, 0x20, 0x41, 0x4d, 0x5d, 0x20, 0x53, 0x61, 0x72, 0x61, 0x68, 0x20, 0x53, 0x6d, 0x69, 0x74, 0x68, 0x20, 0x28, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x20, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x29, 0x3a, 0x2a, 0x2a, 0x20, 0x20, 0x0a, 0x54, 0x68, 0x61, 0x74, 0xe2, 0x80, 0x99, 0x73, 0x20, 0x61, 0x63, 0x68, 0x69, 0x65, 0x76, 0x61, 0x62, 0x6c, 0x65, 0x2c, 0x20, 0x62, 0x75, 0x74, 0x20, 0x69, 0x74, 0xe2, 0x80, 0x99, 0x73, 0x20, 0x74, 0x69, 0x67, 0x68, 0x74, 0x2e, 0x20, 0x57, 0x65, 0xe2, 0x80, 0x99, 0x6c, 0x6c, 0x20, 0x6e, 0x65, 0x65, 0x64, 0x20, 0x74, 0x6f, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x20, 0x74, 0x68, 0x65, 0x20, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x69, 0x6e, 0x74, 0x6f, 0x20, 0x73, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x73, 0x2c, 0x20, 0x77, 0x69, 0x74, 0x68, 0x20, 0x72, 0x65, 0x67, 0x75, 0x6c, 0x61, 0x72, 0x20, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x2d, 0x69, 0x6e, 0x73, 0x20, 0x74, 0x6f, 0x20, 0x65, 0x6e, 0x73, 0x75, 0x72, 0x65, 0x20, 0x77, 0x65, 0x20, 0x73, 0x74, 0x61, 0x79, 0x20, 0x6f, 0x6e, 0x20, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x2e, 0x20, 0x5b, 0x4d, 0x69, 0x63, 0x68, 0x61, 0x65, 0x6c, 0x5d, 0x2c, 0x20, 0x64, 0x6f, 0x20, 0x79, 0x6f, 0x75, 0x20, 0x73, 0x65, 0x65, 0x20, 0x61, 0x6e, 0x79, 0x20, 0x63, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x73, 0x20, 0x77, 0x69, 0x74, 0x68, 0x20, 0x74, 0x68, 0x69, 0x73, 0x3f, 0x0a, 0x0a, 0x2d, 0x2d, 0x2d, 0x0a, 0x0a, 0x2a, 0x2a, 0x5b, 0x31, 0x30, 0x3a, 0x32, 0x35, 0x20, 0x41, 0x4d, 0x5d, 0x20, 0x4d, 0x69, 0x63, 0x68, 0x61, 0x65, 0x6c, 0x20, 0x4c, 0x65, 0x65, 0x20, 0x28, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x29, 0x3a, 0x2a, 0x2a, 0x20, 0x20, 0x0a, 0x57, 0x65, 0xe2, 0x80, 0x99, 0x6c, 0x6c, 0x20, 0x6e, 0x65, 0x65, 0x64, 0x20, 0x63, 0x6c, 0x65, 0x61, 0x72, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x20, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x20, 0x66, 0x72, 0x6f, 0x6d, 0x20, 0x74, 0x68, 0x65, 0x20, 0x73, 0x74, 0x61, 0x72, 0x74, 0x2c, 0x20, 0x62, 0x75, 0x74, 0x20, 0x61, 0x73, 0x20, 0x6c, 0x6f, 0x6e, 0x67, 0x20, 0x61, 0x73, 0x20, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x73, 0x20, 0x6f, 0x70, 0x65, 0x6e, 0x2c, 0x20, 0x77, 0x65, 0x20, 0x73, 0x68, 0x6f, 0x75, 0x6c, 0x64, 0x20, 0x62, 0x65, 0x20, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x74, 0x6f, 0x20, 0x6d, 0x65, 0x65, 0x74, 0x20, 0x74, 0x68, 0x65, 0x20, 0x64, 0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x0a, 0x0a, 0x2d, 0x2d, 0x2d, 0x0a, 0x0a, 0x2a, 0x2a, 0x5b, 0x31, 0x30, 0x3a, 0x32, 0x36, 0x20, 0x41, 0x4d, 0x5d, 0x20, 0x45, 0x6d, 0x69, 0x6c, 0x79, 0x20, 0x43, 0x6c, 0x61, 0x72, 0x6b, 0x20, 0x28, 0x41, 0x72, 0x63, 0x68, 0x69, 0x74, 0x65, 0x63, 0x74, 0x29, 0x3a, 0x2a, 0x2a, 0x20, 0x20, 0x0a, 0x41, 0x67, 0x72, 0x65, 0x65, 0x64, 0x2e, 0x20, 0x49, 0xe2, 0x80, 0x99, 0x6c, 0x6c, 0x20, 0x73, 0x74, 0x61, 0x72, 0x74, 0x20, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x20, 0x6f, 0x6e, 0x20, 0x74, 0x68, 0x65, 0x20, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x20, 0x61, 0x72, 0x63, 0x68, 0x69, 0x74, 0x65, 0x63, 0x74, 0x75, 0x72, 0x61, 0x6c, 0x20, 0x64, 0x65, 0x73, 0x69, 0x67, 0x6e, 0x20, 0x74, 0x68, 0x69, 0x73, 0x20, 0x77, 0x65, 0x65, 0x6b, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x65, 0x6e, 0x73, 0x75, 0x72, 0x65, 0x20, 0x65, 0x76, 0x65, 0x72, 0x79, 0x74, 0x68, 0x69, 0x6e, 0x67, 0x20, 0x69, 0x73, 0x20, 0x77, 0x65, 0x6c, 0x6c, 0x2d, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x65, 0x64, 0x2e, 0x20, 0x52, 0x65, 0x67, 0x75, 0x6c, 0x61, 0x72, 0x20, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x73, 0x20, 0x77, 0x69, 0x6c, 0x6c, 0x20, 0x68, 0x65, 0x6c, 0x70, 0x20, 0x75, 0x73, 0x20, 0x63, 0x61, 0x74, 0x63, 0x68, 0x20, 0x61, 0x6e, 0x79, 0x20, 0x69, 0x73, 0x73, 0x75, 0x65, 0x73, 0x20, 0x65, 0x61, 0x72, 0x6c, 0x79, 0x20, 0x6f, 0x6e, 0x2e, 0x0a, 0x0a, 0x2d, 0x2d, 0x2d, 0x0a, 0x0a, 0x2a, 0x2a, 0x5b, 0x31, 0x30, 0x3a, 0x32, 0x38, 0x20, 0x41, 0x4d, 0x5d, 0x20, 0x53, 0x61, 0x72, 0x61, 0x68, 0x20, 0x53, 0x6d, 0x69, 0x74, 0x68, 0x20, 0x28, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x20, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x29, 0x3a, 0x2a, 0x2a, 0x20, 0x20, 0x0a, 0x45, 0x78, 0x63, 0x65, 0x6c, 0x6c, 0x65, 0x6e, 0x74, 0x2e, 0x20, 0x4c, 0x65, 0x74, 0xe2, 0x80, 0x99, 0x73, 0x20, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x20, 0x74, 0x68, 0x65, 0x20, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x3a, 0x0a, 0x2d, 0x20, 0x5b, 0x4a, 0x6f, 0x68, 0x6e, 0x5d, 0x2c, 0x20, 0x79, 0x6f, 0x75, 0xe2, 0x80, 0x99, 0x6c, 0x6c, 0x20, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x20, 0x74, 0x68, 0x65, 0x20, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x20, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x20, 0x67, 0x75, 0x69, 0x64, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x73, 0x20, 0x62, 0x79, 0x20, 0x74, 0x6f, 0x6d, 0x6f, 0x72, 0x72, 0x6f, 0x77, 0x2e, 0x0a, 0x2d, 0x20, 0x5b, 0x45, 0x6d, 0x69, 0x6c, 0x79, 0x5d, 0x2c, 0x20, 0x79, 0x6f, 0x75, 0xe2, 0x80, 0x99, 0x6c, 0x6c, 0x20, 0x64, 0x72, 0x61, 0x66, 0x74, 0x20, 0x74, 0x68, 0x65, 0x20, 0x61, 0x72, 0x63, 0x68, 0x69, 0x74, 0x65, 0x63, 0x74, 0x75, 0x72, 0x65, 0x20, 0x70, 0x6c, 0x61, 0x6e, 0x20, 0x62, 0x79, 0x20, 0x74, 0x68, 0x65, 0x20, 0x65, 0x6e, 0x64, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x77, 0x65, 0x65, 0x6b, 0x2e, 0x0a, 0x2d, 0x20, 0x5b, 0x4d, 0x69, 0x63, 0x68, 0x61, 0x65, 0x6c, 0x5d, 0x2c, 0x20, 0x79, 0x6f, 0x75, 0xe2, 0x80, 0x99, 0x6c, 0x6c, 0x20, 0x73, 0x65, 0x74, 0x20, 0x75, 0x70, 0x20, 0x74, 0x68, 0x65, 0x20, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x73, 0x68, 0x61, 0x72, 0x65, 0x20, 0x74, 0x68, 0x65, 0x20, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x20, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x2e, 0x0a, 0x0a, 0x2d, 0x2d, 0x2d, 0x0a, 0x0a, 0x2a, 0x2a, 0x5b, 0x31, 0x30, 0x3a, 0x33, 0x30, 0x20, 0x41, 0x4d, 0x5d, 0x20, 0x4a, 0x6f, 0x68, 0x6e, 0x20, 0x44, 0x6f, 0x65, 0x20, 0x28, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x29, 0x3a, 0x2a, 0x2a, 0x20, 0x20, 0x0a, 0x49, 0xe2, 0x80, 0x99, 0x6c, 0x6c, 0x20, 0x73, 0x65, 0x6e, 0x64, 0x20, 0x74, 0x68, 0x65, 0x20, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x67, 0x75, 0x69, 0x64, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x73, 0x20, 0x74, 0x6f, 0x64, 0x61, 0x79, 0x2e, 0x0a, 0x0a, 0x2d, 0x2d, 0x2d, 0x0a, 0x0a, 0x2a, 0x2a, 0x5b, 0x31, 0x30, 0x3a, 0x33, 0x31, 0x20, 0x41, 0x4d, 0x5d, 0x20, 0x45, 0x6d, 0x69, 0x6c, 0x79, 0x20, 0x43, 0x6c, 0x61, 0x72, 0x6b, 0x20, 0x28, 0x41, 0x72, 0x63, 0x68, 0x69, 0x74, 0x65, 0x63, 0x74, 0x29, 0x3a, 0x2a, 0x2a, 0x20, 0x20, 0x0a, 0x49, 0xe2, 0x80, 0x99, 0x6c, 0x6c, 0x20, 0x68, 0x61, 0x76, 0x65, 0x20, 0x74, 0x68, 0x65, 0x20, 0x61, 0x72, 0x63, 0x68, 0x69, 0x74, 0x65, 0x63, 0x74, 0x75, 0x72, 0x65, 0x20, 0x64, 0x72, 0x61, 0x66, 0x74, 0x20, 0x72, 0x65, 0x61, 0x64, 0x79, 0x20, 0x62, 0x79, 0x20, 0x46, 0x72, 0x69, 0x64, 0x61, 0x79, 0x2e, 0x0a, 0x0a, 0x2d, 0x2d, 0x2d, 0x0a, 0x0a, 0x2a, 0x2a, 0x5b, 0x31, 0x30, 0x3a, 0x33, 0x32, 0x20, 0x41, 0x4d, 0x5d, 0x20, 0x4d, 0x69, 0x63, 0x68, 0x61, 0x65, 0x6c, 0x20, 0x4c, 0x65, 0x65, 0x20, 0x28, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x29, 0x3a, 0x2a, 0x2a, 0x20, 0x20, 0x0a, 0x49, 0xe2, 0x80, 0x99, 0x6c, 0x6c, 0x20, 0x73, 0x74, 0x61, 0x72, 0x74, 0x20, 0x74, 0x6f, 0x64, 0x61, 0x79, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x73, 0x65, 0x6e, 0x64, 0x20, 0x74, 0x68, 0x65, 0x20, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x73, 0x65, 0x74, 0x75, 0x70, 0x20, 0x70, 0x6c, 0x61, 0x6e, 0x20, 0x62, 0x79, 0x20, 0x74, 0x6f, 0x6d, 0x6f, 0x72, 0x72, 0x6f, 0x77, 0x2e, 0x0a, 0x0a, 0x2d, 0x2d, 0x2d, 0x0a, 0x0a, 0x2a, 0x2a, 0x5b, 0x31, 0x30, 0x3a, 0x33, 0x33, 0x20, 0x41, 0x4d, 0x5d, 0x20, 0x53, 0x61, 0x72, 0x61, 0x68, 0x20, 0x53, 0x6d, 0x69, 0x74, 0x68, 0x20, 0x28, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x20, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x29, 0x3a, 0x2a, 0x2a, 0x20, 0x20, 0x0a, 0x47, 0x72, 0x65, 0x61, 0x74, 0x21, 0x20, 0x54, 0x68, 0x61, 0x6e, 0x6b, 0x73, 0x2c, 0x20, 0x65, 0x76, 0x65, 0x72, 0x79, 0x6f, 0x6e, 0x65, 0x2e, 0x20, 0x4c, 0x65, 0x74, 0xe2, 0x80, 0x99, 0x73, 0x20, 0x73, 0x74, 0x61, 0x79, 0x20, 0x69, 0x6e, 0x20, 0x74, 0x6f, 0x75, 0x63, 0x68, 0x2c, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x77, 0x65, 0xe2, 0x80, 0x99, 0x6c, 0x6c, 0x20, 0x6d, 0x65, 0x65, 0x74, 0x20, 0x61, 0x67, 0x61, 0x69, 0x6e, 0x20, 0x6e, 0x65, 0x78, 0x74, 0x20, 0x77, 0x65, 0x65, 0x6b, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x61, 0x20, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x20, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x20, 0x48, 0x61, 0x76, 0x65, 0x20, 0x61, 0x20, 0x67, 0x72, 0x65, 0x61, 0x74, 0x20, 0x64, 0x61, 0x79, 0x21, 0x0a, 0x0a, 0x2d, 0x2d, 0x2d, 0x0a, 0x0a, 0x2a, 0x2a, 0x5b, 0x31, 0x30, 0x3a, 0x33, 0x34, 0x20, 0x41, 0x4d, 0x5d, 0x20, 0x41, 0x6c, 0x6c, 0x20, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x73, 0x3a, 0x2a, 0x2a, 0x20, 0x20, 0x0a, 0x54, 0x68, 0x61, 0x6e, 0x6b, 0x20, 0x79, 0x6f, 0x75, 0x21, 0x20, 0x20, 0x0a, 0x0a, 0x2d, 0x2d, 0x2d, 0x0a, 0x0a, 0x2a, 0x2a, 0x4d, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x20, 0x45, 0x6e, 0x64, 0x65, 0x64, 0x3a, 0x20, 0x31, 0x30, 0x3a, 0x33, 0x34, 0x20, 0x41, 0x4d, 0x2a, 0x2a, 0x0a ], "text/plain", true),
    new Attachement(2, "document1.pdf", DateTime.Now.AddMonths(-5), DateTime.Now.AddMonths(-1), Encoding.UTF8.GetBytes("PDF content 1"), "application/pdf"),
    new Attachement(1, "image1.png", DateTime.Now.AddMonths(-3), DateTime.Now.AddMonths(-2), Encoding.UTF8.GetBytes("Image content 1"), "image/png"),
    new Attachement(3, "document2.docx", DateTime.Now.AddMonths(-6), DateTime.Now.AddMonths(-4), Encoding.UTF8.GetBytes("Word document content 1"), "application/vnd.openxmlformats-officedocument.wordprocessingml.document"),
    new Attachement(1, "presentation.pptx", DateTime.Now.AddMonths(-7), DateTime.Now.AddMonths(-2), Encoding.UTF8.GetBytes("PowerPoint content 1"), "application/vnd.openxmlformats-officedocument.presentationml.presentation"),
    new Attachement(5, "spreadsheet.xlsx", DateTime.Now.AddMonths(-8), DateTime.Now.AddMonths(-4), Encoding.UTF8.GetBytes("Excel content 1"), "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"),
    new Attachement(6, "document3.pdf", DateTime.Now.AddMonths(-3), DateTime.Now.AddMonths(-2), Encoding.UTF8.GetBytes("PDF content 2"), "application/pdf", true),
    new Attachement(7, "image2.jpg", DateTime.Now.AddMonths(-10), DateTime.Now.AddMonths(-8), Encoding.UTF8.GetBytes("Image content 2"), "image/jpeg"),
    new Attachement(8, "document4.docx", DateTime.Now.AddMonths(-4), DateTime.Now.AddMonths(-3), Encoding.UTF8.GetBytes("Word document content 2"), "application/vnd.openxmlformats-officedocument.wordprocessingml.document"),
    new Attachement(9, "presentation2.pptx", DateTime.Now.AddMonths(-9), DateTime.Now.AddMonths(-7), Encoding.UTF8.GetBytes("PowerPoint content 2"), "application/vnd.openxmlformats-officedocument.presentationml.presentation"),
    new Attachement(10, "spreadsheet2.xlsx", DateTime.Now.AddMonths(-12), DateTime.Now.AddMonths(-9), Encoding.UTF8.GetBytes("Excel content 2"), "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"),
    new Attachement(2, "document5.pdf", DateTime.Now.AddMonths(-14), DateTime.Now.AddMonths(-12), Encoding.UTF8.GetBytes("PDF content 3"), "application/pdf"),
    new Attachement(5, "image3.gif", DateTime.Now.AddMonths(-3), DateTime.Now.AddMonths(-1), Encoding.UTF8.GetBytes("Image content 3"), "image/gif"),
    new Attachement(3, "document6.docx", DateTime.Now.AddMonths(-5), DateTime.Now.AddMonths(-2), Encoding.UTF8.GetBytes("Word document content 3"), "application/vnd.openxmlformats-officedocument.wordprocessingml.document"),
    new Attachement(14, "presentation3.pptx", DateTime.Now.AddMonths(-10), DateTime.Now.AddMonths(-7), Encoding.UTF8.GetBytes("PowerPoint content 3"), "application/vnd.openxmlformats-officedocument.presentationml.presentation"),
    new Attachement(15, "spreadsheet3.xlsx", DateTime.Now.AddMonths(-8), DateTime.Now.AddMonths(-6), Encoding.UTF8.GetBytes("Excel content 3"), "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", true),
    new Attachement(6, "report1.pdf", DateTime.Now.AddMonths(-11), DateTime.Now.AddMonths(-5), Encoding.UTF8.GetBytes("PDF report 1"), "application/pdf"),
    new Attachement(7, "image4.png", DateTime.Now.AddMonths(-9), DateTime.Now.AddMonths(-4), Encoding.UTF8.GetBytes("Image content 4"), "image/png"),
    new Attachement(8, "document7.docx", DateTime.Now.AddMonths(-13), DateTime.Now.AddMonths(-10), Encoding.UTF8.GetBytes("Word document content 4"), "application/vnd.openxmlformats-officedocument.wordprocessingml.document"),
    new Attachement(9, "presentation4.pptx", DateTime.Now.AddMonths(-14), DateTime.Now.AddMonths(-10), Encoding.UTF8.GetBytes("PowerPoint content 4"), "application/vnd.openxmlformats-officedocument.presentationml.presentation"),
    new Attachement(7, "spreadsheet4.xlsx", DateTime.Now.AddMonths(-6), DateTime.Now.AddMonths(-2), Encoding.UTF8.GetBytes("Excel content 4"), "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"),
    new Attachement(11, "document8.pdf", DateTime.Now.AddMonths(-2), DateTime.Now.AddMonths(-1), Encoding.UTF8.GetBytes("PDF content 4"), "application/pdf"),
    new Attachement(12, "image5.jpg", DateTime.Now.AddMonths(-5), DateTime.Now.AddMonths(-3), Encoding.UTF8.GetBytes("Image content 5"), "image/jpeg"),
    new Attachement(13, "report2.pdf", DateTime.Now.AddMonths(-4), DateTime.Now.AddMonths(-1), Encoding.UTF8.GetBytes("PDF report 2"), "application/pdf"),
    new Attachement(4, "spreadsheet5.xlsx", DateTime.Now.AddMonths(-7), DateTime.Now.AddMonths(-3), Encoding.UTF8.GetBytes("Excel content 5"), "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"),
    new Attachement(15, "document9.docx", DateTime.Now.AddMonths(-10), DateTime.Now.AddMonths(-6), Encoding.UTF8.GetBytes("Word document content 5"), "application/vnd.openxmlformats-officedocument.wordprocessingml.document", true)
        };
            context.Attachements.AddRange(attachements);
            context.SaveChanges();

            var documentHistories = new DocumentHistory[]
            {
                new (1, "Pierwsza wersja dokumentu", "1.0", "Wprowadzenie", 3, 1, DateTime.Parse("2023-01-10")),
                new (1, "Dodano nową sekcję", "1.1", "Źródła wymagań", 4, 2, DateTime.Parse("2023-01-20")),
                new (2, "Aktualizacja danych", "1.0", "Interesariusze", 4, 3, DateTime.Parse("2023-02-15")),
                new (3, "Poprawki redakcyjne", "1.0", "Cele systemu", 6, 4, DateTime.Parse("2023-03-01")),
                new (3, "Dodano nowe wymagania", "1.1", "Cele biznesowe", 6, 10, DateTime.Parse("2023-03-10")),
                new (4, "Zmiana autora", "1.0", "Użytkownicy", 8, 6, DateTime.Parse("2023-04-05")),
                new (5, "Korekta błędów", "2.0", "Systemy zewnętrzne", 8, 7, DateTime.Parse("2023-05-10")),
                new (5, "Uaktualniono dane", "2.1", "Komponenty sprzętowe", 10, 8, DateTime.Parse("2023-05-20")),
                new (6, "Nowa wersja dokumentu", "1.0", "Wymagania funkcjonalne", 10, 9, DateTime.Parse("2023-06-01")),
                new (6, "Dodano nowe wymagania", "1.1", "Wymagania na dane", 11, 10, DateTime.Parse("2023-06-10")),
                new (7, "Aktualizacja opisu", "1.1", "Wymagania jakościowe", 11, 1, DateTime.Parse("2023-07-10")),
                new (8, "Zmiana treści", "1.0", "Wymagania w zakresie wiarygodności", 12, 2, DateTime.Parse("2023-08-05")),
                new (8, "Dodano nowy rozdział", "1.1", "Wymagania w zakresie wydajności", 12, 3, DateTime.Parse("2023-08-15")),
                new (9, "Korekta merytoryczna", "2.0", "Wymagania w zakresie elastyczności", 12, 4, DateTime.Parse("2023-09-10")),
                new (9, "Poprawiono formatowanie", "2.1", "Wymagania w zakresie użyteczności", 12, 5, DateTime.Parse("2023-09-20")),
                new (1, "Aktualizacja wersji", "1.2", "Sytuacje wyjątkowe", 13, 6, DateTime.Parse("2023-10-15")),
                new (10, "Zmiana autora", "1.2", "Sytuacje nadzwyczajne", 13, 7, DateTime.Parse("2023-10-25")),
                new (11, "Dodano nową sekcję", "1.0", "Sytuacje krytyczne", 13, 8, DateTime.Parse("2023-11-01")),
                new (12, "Aktualizacja treści", "1.1", "Sytuacje awaryjne", 14, 9, DateTime.Parse("2023-12-05")),
                new (13, "Nowa wersja dokumentu", "1.2", "Wymagania sprzętowe", 14, 10, DateTime.Parse("2024-01-10")),
                new (13, "Dodano nowy rozdział", "1.3", "Wymagania programowe", 14, 10, DateTime.Parse("2024-01-20")),
                new (14, "Zmiana treści", "1.0", "Inne wymagania", 15, 2, DateTime.Parse("2024-02-15")),
                new (15, "Korekta merytoryczna", "1.1", "Kryteria akceptacyjne", 15, 3, DateTime.Parse("2024-03-01")),
                new (16, "Aktualizacja danych", "1.2", "Słownik", 15, 4, DateTime.Parse("2024-04-05")),
                new (17, "Poprawki redakcyjne", "1.0", "Załączniki", 15, 5, DateTime.Parse("2024-05-10")),
                new (18, "Nowa wersja dokumentu", "1.0", "Wprowadzenie", 3, 10, DateTime.Parse("2023-01-10")),
                new (8, "Dodano nową sekcję", "1.1", "Źródła wymagań", 4, 10, DateTime.Parse("2023-01-20")),
                new (9, "Aktualizacja danych", "1.0", "Interesariusze", 4, 3, DateTime.Parse("2023-02-15")),
                new (10, "Poprawki redakcyjne", "1.0", "Cele systemu", 6, 4, DateTime.Parse("2023-03-01")),
                new (21, "Dodano nowe wymagania", "1.1", "Cele biznesowe", 6, 5, DateTime.Parse("2023-03-10")),
                new (12, "Zmiana autora", "1.0", "Użytkownicy", 8, 6, DateTime.Parse("2023-04-05")),
                new (13, "Korekta błędów", "2.0", "Systemy zewnętrzne", 8, 7, DateTime.Parse("2023-05-10")),
                new (14, "Uaktualniono dane", "2.1", "Komponenty sprzętowe", 10, 8, DateTime.Parse("2023-05-20"))
            };
            context.DocumentHistories.AddRange(documentHistories);
            context.SaveChanges();

            //var projectSpecification = new ProjectSpecification[]
            //{
            //    new() { DocumentId = 1, Version = 1, Name = "Specyfikacja wymagań", CreatedDate = DateTime.Now, XamlContent = "<StackPanel xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\">\r\n<TextBlock FontSize=\"20\" FontWeight=\"Bold\" Text=\"Project: Projekt B\" />\r\n<TextBlock Text=\"Version: 1\" />\r\n<TextBlock Text=\"Author: Artur Wilczak\" />\r\n<TextBlock Text=\"Date: 27.09.2024 21:04:36\" />\r\n<TextBlock FontSize=\"16\" FontWeight=\"Bold\" Text=\"Introduction\" />\r\n<TextBlock Text=\"\" TextWrapping=\"Wrap\" />\r\n<TextBlock FontSize=\"16\" FontWeight=\"Bold\" Text=\"Functional Requirements\" />\r\n<TextBlock FontWeight=\"Bold\" Text=\"Złożenie zamówienia\" />\r\n<TextBlock Text=\"Złożenie zamówienia w sklepie\" TextWrapping=\"Wrap\" />\r\n<TextBlock Text=\"Priority: high\" />\r\n</StackPanel>\r\n'" }
            //};

            //context.ProjectSepcyfications.AddRange(projectSpecification);
            //context.SaveChanges();
        }
    }
}